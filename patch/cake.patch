diff --git a/cake/basics.php b/cake/basics.php
index 8a35e00..837085e 100644
--- a/cake/basics.php
+++ b/cake/basics.php
@@ -203,6 +203,8 @@ if (!function_exists('array_combine')) {
 		if (empty($charset)) {
 			$charset = 'UTF-8';
 		}
+        //I want to use gbk,but htmlspecialchars is not supported
+        $charset = (strtolower($charset) === 'gbk')?'GB2312':$charset;
 		return htmlspecialchars($text, ENT_QUOTES, $charset);
 	}
 /**
@@ -936,4 +938,4 @@ if (!function_exists('file_put_contents')) {
 		}
 		return $val2;
 	}
-?>
\ No newline at end of file
+?>
diff --git a/cake/console/cake.php b/cake/console/cake.php
index b5942fd..2b366b0 100644
--- a/cake/console/cake.php
+++ b/cake/console/cake.php
@@ -141,7 +141,7 @@ class ShellDispatcher {
 		if (!defined('CAKE_CORE_INCLUDE_PATH')) {
 			define('PHP5', (PHP_VERSION >= 5));
 			define('DS', DIRECTORY_SEPARATOR);
-			define('CAKE_CORE_INCLUDE_PATH', dirname(dirname(dirname(__FILE__))));
+			define('CAKE_CORE_INCLUDE_PATH', dirname(dirname(dirname(CURRENTFILE))));
 			define('CORE_PATH', CAKE_CORE_INCLUDE_PATH . DS);
 			define('DISABLE_DEFAULT_ERROR_HANDLING', false);
 			define('CAKEPHP_SHELL', true);
@@ -440,7 +440,7 @@ class ShellDispatcher {
  */
 	function parseParams($params) {
 		$this->__parseParams($params);
-		$defaults = array('app' => 'app', 'root' => dirname(dirname(dirname(__FILE__))), 'working' => null, 'webroot' => 'webroot');
+		$defaults = array('app' => 'app', 'root' => dirname(dirname(dirname(CURRENTFILE))), 'working' => null, 'webroot' => 'webroot');
 		$params = array_merge($defaults, array_intersect_key($this->params, $defaults));
 		$isWin = false;
 		foreach ($defaults as $default => $value) {
@@ -577,7 +577,9 @@ class ShellDispatcher {
 		exit($status);
 	}
 }
+//using CURRENTFILE instead of __FILE__
+define(CURRENTFILE, "/path/to/cake/console/cake.php");
 if (!defined('DISABLE_AUTO_DISPATCH')) {
 	$dispatcher = new ShellDispatcher($argv);
 }
-?>
\ No newline at end of file
+?>
diff --git a/cake/dispatcher.php b/cake/dispatcher.php
index b208aeb..c6636a3 100644
--- a/cake/dispatcher.php
+++ b/cake/dispatcher.php
@@ -352,7 +352,8 @@ class Dispatcher extends Object {
 			$replace = array('<', '>', '*', '\'', '"');
 			$base = str_replace($replace, '', dirname(env('PHP_SELF')));
 
-			if ($webroot === 'webroot' && $webroot === basename($base)) {
+            //when I find this, I can't change the name of webroot.
+			if ($webroot === 'www' && $webroot === basename($base)) {
 				$base = dirname($base);
 			}
 			if ($dir === 'app' && $dir === basename($base)) {
@@ -587,13 +588,14 @@ class Dispatcher extends Object {
  */
 	function cached($url) {
 		if (strpos($url, 'css/') !== false || strpos($url, 'js/') !== false || strpos($url, 'img/') !== false) {
-			if (strpos($url, 'ccss/') === 0) {
+			if (strpos($url, 'ccss/') !== false) {
 				include WWW_ROOT . DS . Configure::read('Asset.filter.css');
 				$this->_stop();
-			} elseif (strpos($url, 'cjs/') === 0) {
+			} elseif (strpos($url, 'cjs/') !== false) {
 				include WWW_ROOT . DS . Configure::read('Asset.filter.js');
 				$this->_stop();
 			}
+			/* i have my cache control
 			$isAsset = false;
 			$assets = array(
 				'js' => 'text/javascript', 'css' => 'text/css',
@@ -660,6 +662,7 @@ class Dispatcher extends Object {
 					return true;
 				}
 			}
+			*/
 		}
 
 		if (Configure::read('Cache.check') === true) {
@@ -691,4 +694,4 @@ class Dispatcher extends Object {
 		return false;
 	}
 }
-?>
\ No newline at end of file
+?>
diff --git a/cake/libs/error.php b/cake/libs/error.php
index 8f33ff3..3b853be 100644
--- a/cake/libs/error.php
+++ b/cake/libs/error.php
@@ -91,7 +91,9 @@ class ErrorHandler extends Object {
 			$this->controller->viewPath = 'errors';
 		}
 
-		$options = array('escape' => false);
+		//no odd_space for message ,there is some bug with chinese
+		//modify by xw 20090925
+		$options = array('escape' => false, 'odd_spaces' => false);
 		$messages = Sanitize::clean($messages, $options);
 
 		if (!isset($messages[0])) {
@@ -106,6 +108,9 @@ class ErrorHandler extends Object {
 			$method = 'error';
 		}
 
+		//i have my errror control , i don't want to be error404 when other error ocurr in debug 0 mode
+		//modify by xw 20091092
+		/*
 		if ($method !== 'error') {
 			if (Configure::read() == 0) {
 				$method = 'error404';
@@ -114,6 +119,7 @@ class ErrorHandler extends Object {
 				}
 			}
 		}
+		*/
 		$this->dispatchMethod($method, $messages);
 		$this->_stop();
 	}
@@ -374,4 +380,4 @@ class ErrorHandler extends Object {
 		echo $this->controller->output;
 	}
 }
-?>
\ No newline at end of file
+?>
